is_osx() {
    if [ "$(uname)" = "Darwin" ]; then
        return 0
    fi

    return 1
}

# Open a link (probably works for file paths as well)
# in the systems default browser
open_link() {
    if is_osx; then
        open "$1"
    else
        xdg-open "$1"
    fi
}

# Launch an http server in the current directory
# and optionally open it in the default browser
server() {
    local port="8000"

    if [ "$1" != "--no-browser" ] && [ "$1" != "-n" ]; then
        (sleep 1 && open_link "http://localhost:${port}/") &
    fi

    if command -v python3 >/dev/null; then
        python3 -m http.server "$port"
    else
        python -m SimpleHTTPServer "$port"
    fi
}

# Adapted from https://gist.github.com/SlexAxton/4989674
gifify() {
    local OPTIND
    local gif_width="480"
    while getopts ":w:s:d:" opt; do
        case "${opt}" in
            w)
                gif_width="${OPTARG}"
                ;;
            s)
                ffmpeg_start="${OPTARG}"
                ;;
            d)
                ffmpeg_duration="${OPTARG}"
                ;;
            *)
                echo "Not a flag"
                exit 1
                ;;
        esac
    done

    shift $(( OPTIND - 1))

    if [ -n "$1" ] && [ -f "$1" ]; then
        ffmpeg -i "${1}" -ss "${ffmpeg_start}" -t "${ffmpeg_duration}" -r 10 -f image2pipe -vcodec ppm - | convert +dither -coalesce -layers Optimize -resize "${gif_width}" - "${1}".gif
    else
        echo "proper usage: gifify <input.ext>. You DO need to include extension."
    fi
}


# Install helpers to finish setting up the shell.
# TODO: move this functionality to a bootstrap script

df_install_rvm() {
    \curl -sSL https://get.rvm.io | bash -s stable --ignore-dotfiles
}

df_install_nvm() {
    _CURRENT_DIR="$PWD"

    git clone https://github.com/creationix/nvm.git ~/.nvm
    cd ~/.nvm
    git checkout `git describe --abbrev=0 --tags`

    cd "$_CURRENT_DIR"
    unset $_CURRENT_DIR
}

df_install_homebrew() {
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

df_install_zsh() {
    _CURRENT_DIR="$PWD"

    # Manually install oh-my-zsh
    cd ~
    git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh

    # Install oh-my-zsh custom plugins
    cd ~/.oh-my-zsh/custom
    git init
    git remote add origin https://github.com/aloop/oh-my-zsh-custom.git
    git fetch
    git checkout --track origin/master
    git submodule update --init --recursive

    cd "$_CURRENT_DIR"
    unset $_CURRENT_DIR
}

df_install() {
    df_install_rvm
    df_install_nvm
    df_install_zsh
    if is_osx; then
        df_install_homebrew
    fi
}
