#!/usr/bin/env sh

# This is set as this scripts directory
dotfile_dir="$(cd "$(dirname "$0")" && pwd -L)"
dotfile_link_dir="link"
dotfile_copy_dir="copy"
backup_base="${dotfile_dir}/backups/$(hostname)@$(date "+%Y-%m-%d-%H%M%S")"

## Functions
print() {
    printf "%s" $1
}

clean_path() {
    print $1 | sed -E "s/[\/]{2,}/\//g"
}

strip_path() {
    clean_path "$(print $2 | sed "s|$1||")"
}

join_path() {
    clean_path "$(printf "/%s" "$@")"
}

backup_original() {
    if [ -e "$1" ]; then
        backup_dest="$(join_path "$backup_base" "$(strip_path "$HOME" "$1")")"

        if [ ! -d "$(dirname "$backup_dest")" ]; then
            mkdir -p "$(dirname "$backup_dest")"
        fi

        mv "$1" "$backup_dest"
    fi
}

process_dir() {
    action="$1"

    case "$action" in
        copy)
            basepath="$(join_path "$dotfile_dir" "$dotfile_copy_dir")"
        ;;
        *)
            basepath="$(join_path "$dotfile_dir" "$dotfile_link_dir")"
        ;;
    esac

    dir="${2:-$basepath}"

    # From http://www.dwheeler.com/essays/filenames-in-shell.html#summary
    for path in "$dir"/* "$dir"/.[!.]* "$dir"/..?*; do
        if [ -e "$path" ]; then
            dest="$(join_path "$HOME" "$(strip_path "$basepath" "$path")")"

            if [ -d "$path" ] && [ ! -L "$path" ]; then
                mkdir -p "$dest"

                process_dir "$action" "$path"
            else
                backup_original "$dest"

                case "$action" in
                    copy)
                        cp -f "$path" "$dest"
                        printf 'Copied \033[1;32m~%s\033[0m to \033[1;32m~%s\033[0m\n' "${path#${HOME}}" "${dest#${HOME}}"
                    ;;
                    *)
                        ln -sf "$path" "$dest"
                        printf 'Linked \033[1;32m~%s\033[0m to \033[1;32m~%s\033[0m\n' "${path#${HOME}}" "${dest#${HOME}}"
                    ;;
                esac
            fi
        fi
    done
}

print_help() {
    link_path="~$(join_path "${dotfile_dir#${HOME}}" "$dotfile_link_dir")"
    copy_path="~$(join_path "${dotfile_dir#${HOME}}" "$dotfile_copy_dir")"

    cat <<EOF
Usage: manage [-h|--help] <command>

Commands:
    install  Link and copy all files under $link_path and $copy_path
    link     Link all files under $link_path
    copy     Copy all files under $copy_path
EOF
}

## Main

do_copy=0
do_link=0

while :; do
    case "$1" in
        -h|--help)
            print_help
            exit
            ;;
        install)
            do_copy=1
            do_link=1
            break
            ;;
        link)
            do_link=1
            break
            ;;
        copy)
            do_copy=1
            break
            ;;
        --)
            shift
            break
            ;;
        -?*)
            printf 'Unknown option: %s\n' "$1" >&2
            print_help >&2
            exit 1
            ;;
        ?*)
            printf 'Unknown command: %s\n' "$1" >&2
            print_help >&2
            exit 1
            ;;
        *)
            print_help >&2
            exit 1
            ;;
    esac

    shift
done

if [ $do_link -eq 1 ]; then
    process_dir "link"
fi

if [ $do_copy -eq 1 ]; then
    process_dir "copy"
fi
