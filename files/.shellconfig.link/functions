#!/usr/bin/env sh

is_osx() {
    if [ "$(uname)" = "Darwin" ]; then
        return 0
    fi

    return 1
}

# Open a link (probably works for file paths as well)
# in the systems default browser
open_link() {
    if is_osx; then
        open "$1"
    else
        xdg-open "$1"
    fi
}

# Launch an http server in the current directory
# and optionally open it in the default browser
server() (
    port="8000"

    if [ "$1" != "--no-browser" ] && [ "$1" != "-n" ]; then
        (sleep 1 && open_link "http://localhost:${port}/") &
    fi

    if command_exists python3; then
        python3 -m http.server "$port"
    else
        python -m SimpleHTTPServer "$port"
    fi
)

# Helpers to finish setting up the shell.

df_install_rbenv() (
    if [ -d "${HOME}/.rbenv" ]; then
      printf '~/.rbenv already exists, exiting...\n' >&2
      exit 1
    fi

    git clone https://github.com/rbenv/rbenv.git ~/.rbenv || exit 1
    "${HOME}"/.rbenv/bin/rbenv rehash
    git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build || exit 1
)

df_install_nvm() (
    if [ -d "${HOME}/.nvm" ]; then
      printf '~/.nvm already exists, exiting...\n' >&2
      exit 1
    fi

    git clone https://github.com/creationix/nvm.git "${HOME}/.nvm"
    cd "${HOME}/.nvm" || exit
    git checkout "$(git describe --abbrev=0 --tags)"
)

df_install_brew() (
    if command_exists brew; then
      printf 'command "brew" already exists, exiting...\n' >&2
      exit 1
    fi

    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    xcode-select --install
)

df_install_zgen() (
    if [ -d "${HOME}/.zgen" ]; then
      printf '~/.zgen already exists, exiting...\n' >&2
      exit 1
    fi

    git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen"
)

df_install() (
    if is_osx; then
        df_install_brew
    fi
    df_install_rbenv
    df_install_nvm
    df_install_zgen
)
