#!/usr/bin/env sh

is_osx() {
    [ "$(uname)" = "Darwin" ]
}

# Open a link (probably works for file paths as well)
# in the systems default browser
open_link() {
    if is_osx && df_command_exists open; then
        open "$1"
    elif df_command_exists xdg-open; then
        xdg-open "$1"
    fi
}

# Launch an http server in the current directory
# and optionally open it in the default browser
server() (
    port="8000"

    if [ "$1" != "--no-browser" ] && [ "$1" != "-n" ]; then
        (sleep 1 && open_link "http://localhost:${port}/") &
    fi

    if df_command_exists python3; then
        python3 -m http.server "$port"
    elif df_command_exists python; then
        python -m SimpleHTTPServer "$port"
    else
        printf "couldn't start server, suitable python version not found" >&2
        exit 1
    fi
)

pretty_print_path() {
    echo $PATH | tr ':' "\n"
}

# Flatpak Helpers

flatpak_update() (
    flatpak update $(flatpak list --app | cut -f1 | sed 's/\/.*//' | tr "\\n" ' ')
)

# Helpers to finish setting up the shell.

dotfiles_install_nvm() (
    if [ -d "${HOME}/.nvm" ]; then
        printf '~/.nvm already exists, exiting...\n' >&2
        exit 1
    fi

    git clone https://github.com/creationix/nvm.git "${HOME}/.nvm"
    cd "${HOME}/.nvm" || exit
    git checkout "$(git describe --abbrev=0 --tags)"
)

dotfiles_install_brew() (
    if df_command_exists brew; then
        printf 'command "brew" already exists, exiting...\n' >&2
        exit 1
    fi

    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    xcode-select --install
)

dotfiles_install() (
    if is_osx; then
        dotfiles_install_brew
    fi
    dotfiles_install_nvm
)
