#compdef dfctl

# References:
# @url https://zsh.sourceforge.io/Doc/Release/Completion-System.html
# @url https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org

_dfctl() {
    local ret=1 curcontext="${curcontext}" state line
    typeset -A opt_args
    common_options=(
        '(-v --verbose)'{-v,--verbose}"[Enable more verbose output]:verbose"
        '(-h --help)'{-h,--help}"[display usage information]"
    )

    local SCRIPTS_DIR="${DOTFILES_DIR}/scripts"

    _arguments -s -S \
        ':subcommand:->subcommand' \
        "${common_options[@]}" \
        '*::options:->options' && ret=0

    case $state in
        subcommand)
            local -a subcommands
            subcommands=(
                "install:Install or update dotfiles"
                "run:Run a script from \"${DOTFILES_DIR}/scripts\""
            )

            _describe -t subcommands 'dfctl subcommand' subcommands && ret=0
            ;;
        options)
            local -a args
            args=(
                "${common_options[@]}"
            )
            case "${words[1]}" in
                install)
                    args+=(
                        "--no-backups[Do not backup existing files]"
                        "--ignore[Specify one or more files or folders to ignore]"
                        "--links[Install all softlinks]"
                        "--hardlinks[Install all hardlinks]"
                        "--copies[Install all copies]"
                    )
                    ;;
                run)
                    local -a script_types
                    local script_type

                    if [ -d "${SCRIPTS_DIR}" ]; then
                        for script_type in "${SCRIPTS_DIR}"/*; do
                            if [ -d "$script_type" ]; then
                                script_types+="$(basename "$script_type")"
                            fi
                        done
                    fi

                    # Only generate completions for script types if we haven't selected one yet
                    if [ -z "${words[2]}" ] || [[ ${script_types[(ie)${words[2]}]} -gt ${#script_types} ]]; then
                        _describe -o -t script_types 'dfctl install script_type' script_types && ret=0
                    else
                        selected_type="${words[2]}"
                        local -a scripts
                        local script
                        for script in "${SCRIPTS_DIR}/${selected_type}/"*; do
                            if [ ! -d "$script" ] && [ -x "$script" ]; then
                                scripts+="$(basename "$script")"
                            fi
                        done

                        # Only complete if we haven't selected a script yet
                        if [ -z "${words[3]}" ] || [[ ${scripts[(ie)${words[3]}]} -gt ${#scripts} ]]; then
                            _describe -o -t scripts "dfctl run ${selected_type} script" scripts && ret=0
                        fi
                    fi
                    ;;
            esac

            _arguments -s -S "${args[@]}" && ret=0
            ;;
    esac


    return $ret
}

_dfctl "$@"
