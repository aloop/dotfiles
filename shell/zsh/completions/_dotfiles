#compdef dotfiles

_arguments -C \
  '1:cmd:->cmds' \
  '*:: :->args' \
&& return 0

local shared_args
shared_args=(
    "(- *)"{-h,--help}"[display usage information]"
)

__dotfiles_scripts_autocomplete() {
    local script_file=
    local script_files=()
    local script_type="$1"

    local SCRIPTS_DIR="${DOTFILES_DIR}/scripts/${script_type}"

    if [ -n "$script_type" ] && [ -n "$SCRIPTS_DIR" ] && [ -d "$SCRIPTS_DIR" ]; then
        for script_file in "$SCRIPTS_DIR"/*; do
            if [ -e "$script_file" ] && [ ! -d "$script_file" ]; then
                script_files=(
                    "${script_files[@]}"
                    "${script_file#"${SCRIPTS_DIR}/"}"
                )
            fi
        done
    fi

    _describe -t script_files "available ${script_type} scripts" script_files
}

case "$state" in
    (cmds)
        local commands=(
            "install:Install or update dotfiles, or run an install script when given a second argument"
            "settings:Run a script intended to configure settings"
            "upgrade:Run a script intended to upgrade an application"
        )

        _arguments "(- *)"{-h,--help}"[display usage information]"

        _describe -t commands 'command' commands && return 0
        ;;
    (args)
        case "${line[1]}" in
            (install)
                local arguments=(
                    "(-h --help --no-links)--no-copies[Only use dotfiles that are created as symlinks]"
                    "(-h --help --no-copies)--no-links[Only use dotfiles that are copied]"
                    "(-h --help)--no-backups[Don't backup any already existing files when copying or linking files]"
                    "${shared_args[@]}"
                )

                _arguments "${arguments[@]}" && __dotfiles_scripts_autocomplete "install" && return 0
            ;;
            (settings)
                __dotfiles_scripts_autocomplete "settings" && return 0
            ;;
            (upgrade)
                __dotfiles_scripts_autocomplete "upgrades" && return 0
            ;;
        esac
        ;;
esac

return 1
