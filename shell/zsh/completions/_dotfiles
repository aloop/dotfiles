#compdef dotfiles

# Reference: https://zsh.sourceforge.io/Doc/Release/Completion-System.html

_dotfiles_scripts_autocomplete() {
    local script_file=
    local -a script_files=()
    local script_type="$1"

    local SCRIPTS_DIR="${DOTFILES_DIR}/scripts/${script_type}"

    if [ -n "$script_type" ] && [ -n "$SCRIPTS_DIR" ] && [ -d "$SCRIPTS_DIR" ]; then
        for script_file in "$SCRIPTS_DIR"/*; do
            if [ -e "$script_file" ] && [ ! -d "$script_file" ]; then
                script_files=(
                    "${script_files[@]}"
                    "${script_file#"${SCRIPTS_DIR}/"}"
                )
            fi
        done

        _describe -t script_files "available ${script_type} scripts" script_files
    else
        return 0
    fi
}

_dotfiles() {
    local curcontext="${curcontext}" context state state_descr line
    typeset -A opt_args

    _arguments -s \
        - set1 \
            "--no-copies[Only use dotfiles that are created as symlinks]" \
            "--no-backups[Don't backup any already existing files when copying or linking files]" \
        - set2 \
            "--no-links[Only use dotfiles that are copied]" \
            "--no-backups[Don't backup any already existing files when copying or linking files]" \
        - set3 \
            {-h,--help}"[display usage information]" \
        - set4 \
            ':command:((\
                install\:"Install or update dotfiles, or run an install script when given a second argument" \
                settings\:"Run a script intended to configure settings" \
                upgrade\:"Run a script intended to upgrade an application"\
            ))'

    # Adapted from https://zsh.sourceforge.io/Guide/zshguide06.html#l144
    if (( CURRENT == 3 )); then
        # Remember the subcommand name
        local cmd=${words[2]}
        # Set the context for the subcommand.
        curcontext="${curcontext%:*:*}:dotfiles-$cmd"
        # Narrow the range of words we are looking at to exclude `dotfiles'
        (( CURRENT-- ))
        shift words
        # Run the completion for the subcommand
        _dotfiles_scripts_autocomplete "$cmd" && return 0
    fi
}

_dotfiles "$@"
