#!/usr/bin/env sh

path_prepend="${path_prepend:+$path_prepend:}\
${HOME}/.yarn/bin\
:/usr/local/bin\
:/usr/local/sbin"

path_append="${HOME}/.cabal/bin\
${GOPATH:+:$GOPATH/bin}\
:${HOME}/.composer/vendor/bin\
:${HOME}/.config/composer/vendor/bin\
:/snap/bin\
:${HOME}/.cargo/bin\
:${HOME}/.bin\
${path_append:+:$path_append}"

_df_is_in_path() {
    case "$1" in
        $2:*)   return 0 ;;
        *:$2)   return 0 ;;
        *:$2:*) return 0 ;;
        *)      return 1 ;;
    esac
}

_df_filter_segment() (
    _temp_path="$1"
    _segment="$2"

    if [ "$_temp_path" = "$_segment" ]; then
        _temp_path=""
    else
        while _df_is_in_path "$_temp_path" "${_segment}"; do
            _temp_path=${_temp_path//":${_segment}:"/":"}
            _temp_path=${_temp_path/#"${_segment}:"/}
            _temp_path=${_temp_path/%":${_segment}"/}
        done
    fi

    printf "%s" "$_temp_path"
)

_df_process_path() (
    filtered_path="$1"
    _path_prepend="$2"
    _path_append="$3"

    oldIFS="$IFS"
    IFS=':'

    if [ -n "$_path_prepend" ]; then
        for _segment in $_path_prepend; do
            if [ -n "$_segment" ]; then
                filtered_path="${_segment}:$(_df_filter_segment "$filtered_path" "$_segment")"
            fi
        done
    fi

    if [ -n "$_path_append" ]; then
        for _segment in $_path_append; do
            if [ -n "$_segment" ]; then
                filtered_path="$(_df_filter_segment "$filtered_path" "$_segment"):${_segment}"
            fi
        done
    fi

    IFS="$oldIFS"

    printf "%s" "$filtered_path"
)

# Set $PATH, removing multiple consecutive colons
PATH="$(_df_process_path "$PATH" "$path_prepend" "$path_append" | sed "s|:\{2,\}|:|g")"

# Remove leading and trailing colons
PATH="${PATH#:}"
PATH="${PATH%:}"
