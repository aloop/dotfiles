#!/usr/bin/env sh

is_osx() {
    [ "$(uname)" = "Darwin" ]
}

# Open a link (probably works for file paths as well)
# in the systems default browser
open_link() {
    if is_osx && df_command_exists open; then
        open "$1"
    elif df_command_exists xdg-open; then
        xdg-open "$1"
    fi
}

# Launch an http server in the current directory
# and optionally open it in the default browser
server() (
    port="8000"

    if [ "$1" != "--no-browser" ] && [ "$1" != "-n" ]; then
        (sleep 1 && open_link "http://localhost:${port}/") &
    fi

    if df_command_exists python3; then
        python3 -m http.server "$port"
    elif df_command_exists python; then
        python -m SimpleHTTPServer "$port"
    else
        printf "couldn't start server, suitable python version not found" >&2
        exit 1
    fi
)

pretty_print_path() {
    echo "$PATH" | tr ':' "\n"
}

# WP-CLI helpers

wp_migrate_url() (
    oldhost="$1"
    newhost="$2"

    if [ -z "$oldhost" ]; then
        echo "1st parameter for old hostname not given"
        exit 1
    fi

    if [ -z "$newhost" ]; then
        echo "2nd parameter for new hostname not given"
        exit 1
    fi

    # Backup database first
    wp db export
    # Replace `$oldhost` with `$newhost` without altering GUIDs
    wp search-replace --skip-columns='guid' --url="$oldhost" "$oldhost" "$newhost"
)

# Generate a sha256 hash for usage with Content-Security-Protection

gen_csp_hash() {
    printf 'sha256-%s\n' "$(printf '%s' "$1" | openssl dgst -binary -sha256 | openssl base64)"
}

# Helpers for working with the dotfiles

dotfiles() (
    "${HOME}/.dotfiles/install" "$@"
)

